{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RUPAK\\\\Downloads\\\\Reserve-system-main\\\\Reserve-system-main\\\\Frontend\\\\src\\\\pages\\\\Parking.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { deleteParking, fetchParkings } from '../api/api';\nimport { DeleteModal, ParkingCard } from '../components';\nimport './../css/parking.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Parking = () => {\n  _s();\n  const user = useSelector(state => state.user);\n  const navigate = useNavigate();\n  const [parkings, setParkings] = useState();\n\n  // Delete management states\n  const [selectedParking, setSelectedParking] = useState();\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  useEffect(() => {\n    // Parking List API sets parkings state using setParkings passed as callback function\n    if ((user === null || user === void 0 ? void 0 : user.type) === 'admin') {\n      fetchParkings({\n        user_id: user === null || user === void 0 ? void 0 : user._id,\n        setParkings\n      });\n    } else {\n      fetchParkings({\n        setParkings\n      });\n    }\n  }, []);\n\n  // Used to display multiple Parking cards\n  const parkingCards = () => {\n    return parkings && parkings.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: /*#__PURE__*/_jsxDEV(ParkingCard, {\n        parking: item,\n        onClick: () => navigate('/space', {\n          state: {\n            parking: item\n          }\n        }),\n        setSelectedParking: setSelectedParking,\n        setShowDeleteModal: setShowDeleteModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this));\n  };\n\n  // Used to delete parking\n  const handleDeleteParking = () => {\n    deleteParking({\n      id: selectedParking === null || selectedParking === void 0 ? void 0 : selectedParking._id,\n      handleDeleteParkingSuccess,\n      handleDeleteParkingFailure\n    });\n  };\n  const handleDeleteParkingSuccess = () => {\n    if ((user === null || user === void 0 ? void 0 : user.type) === 'admin') {\n      fetchParkings({\n        user_id: user === null || user === void 0 ? void 0 : user._id,\n        setParkings\n      });\n    } else {\n      fetchParkings({\n        setParkings\n      });\n    }\n    setShowDeleteModal(false);\n  };\n  const handleDeleteParkingFailure = () => {\n    setShowDeleteModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Parkings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-2 g-5\",\n      children: parkingCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {\n      value: selectedParking === null || selectedParking === void 0 ? void 0 : selectedParking.name,\n      showModal: showDeleteModal,\n      setShowModal: setShowDeleteModal,\n      onDeleteConfirm: handleDeleteParking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Parking, \"y3lYaE9mcnT0ae0CmWKD3Rwt2Yo=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = Parking;\nexport default Parking;\nvar _c;\n$RefreshReg$(_c, \"Parking\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","deleteParking","fetchParkings","DeleteModal","ParkingCard","jsxDEV","_jsxDEV","Parking","_s","user","state","navigate","parkings","setParkings","selectedParking","setSelectedParking","showDeleteModal","setShowDeleteModal","type","user_id","_id","parkingCards","map","item","index","className","children","parking","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleDeleteParking","id","handleDeleteParkingSuccess","handleDeleteParkingFailure","value","name","showModal","setShowModal","onDeleteConfirm","_c","$RefreshReg$"],"sources":["C:/Users/RUPAK/Downloads/Reserve-system-main/Reserve-system-main/Frontend/src/pages/Parking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { deleteParking, fetchParkings } from '../api/api'\nimport { DeleteModal, ParkingCard } from '../components'\nimport './../css/parking.scss'\n\nconst Parking = () => {\n    const user = useSelector((state) => state.user);\n    const navigate = useNavigate()\n    const [parkings, setParkings] = useState()\n\n    // Delete management states\n    const [selectedParking, setSelectedParking] = useState()\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\n\n    useEffect(() => {\n        // Parking List API sets parkings state using setParkings passed as callback function\n        if (user?.type === 'admin') {\n            fetchParkings({ user_id: user?._id, setParkings })\n        }\n        else {\n            fetchParkings({ setParkings })\n        }\n    }, [])\n\n    // Used to display multiple Parking cards\n    const parkingCards = () => {\n        return parkings && parkings.map((item, index) => (\n            <div className='col-md-4' key={index}>\n                <ParkingCard\n                    parking={item}\n                    onClick={() => navigate('/space', { state: { parking: item } })}\n                    setSelectedParking={setSelectedParking}\n                    setShowDeleteModal={setShowDeleteModal} />\n            </div>\n        ))\n    }\n\n    // Used to delete parking\n    const handleDeleteParking = () => {\n        deleteParking({ id: selectedParking?._id, handleDeleteParkingSuccess, handleDeleteParkingFailure })\n    }\n\n    const handleDeleteParkingSuccess = () => {\n        if (user?.type === 'admin') {\n            fetchParkings({ user_id: user?._id, setParkings })\n        }\n        else {\n            fetchParkings({ setParkings })\n        }\n        setShowDeleteModal(false)\n    }\n\n    const handleDeleteParkingFailure = () => {\n        setShowDeleteModal(false)\n    }\n\n    return (\n        <div className='container'>\n            <h1 className='mt-5'>Parkings</h1>\n\n            <div className='row mt-2 g-5'>\n                {parkingCards()}\n            </div>\n            <DeleteModal value={selectedParking?.name} showModal={showDeleteModal} setShowModal={setShowDeleteModal} onDeleteConfirm={handleDeleteParking}/>\n        </div>\n    )\n}\n\nexport default Parking"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}